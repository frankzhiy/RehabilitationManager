services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    # 使用 run_services.py 的方式启动 WSGI 和 ASGI
    command: >
      sh -c "
      gunicorn RehabilitationManager.wsgi:application -b 0.0.0.0:8087 --workers 3 &
      daphne -b 0.0.0.0 -p 8088 RehabilitationManager.asgi:application &
      wait
      "
    ports:
      - "8087:8087"  
      - "8088:8088"
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=RehabilitationManager.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A RehabilitationManager worker --loglevel=info
    depends_on:
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=RehabilitationManager.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A RehabilitationManager beat --loglevel=info
    depends_on:
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=RehabilitationManager.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app

  redis:
    image: redis:6.2
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    working_dir: /data
    command: redis-server --dir /data --dbfilename dump.rdb

volumes:
  redis_data: